{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { setElementValue, getWindow, dataAttr } from '@zag-js/dom-query';\nimport { createMachine } from '@zag-js/core';\nimport { setRafTimeout, createSplitProps } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/clipboard.anatomy.ts\nvar anatomy = createAnatomy(\"clipboard\").parts(\"root\", \"control\", \"trigger\", \"indicator\", \"input\", \"label\");\nvar parts = anatomy.build();\nvar getRootId = ctx => ctx.ids?.root ?? `clip:${ctx.id}`;\nvar getInputId = ctx => ctx.ids?.input ?? `clip:${ctx.id}:input`;\nvar getLabelId = ctx => ctx.ids?.label ?? `clip:${ctx.id}:label`;\nvar getInputEl = ctx => ctx.getById(getInputId(ctx));\nvar writeToClipboard = (ctx, value) => copyText(ctx.getDoc(), value);\nfunction createNode(doc, text) {\n  const node = doc.createElement(\"pre\");\n  Object.assign(node.style, {\n    width: \"1px\",\n    height: \"1px\",\n    position: \"fixed\",\n    top: \"5px\"\n  });\n  node.textContent = text;\n  return node;\n}\nfunction copyNode(node) {\n  const win = getWindow(node);\n  const selection = win.getSelection();\n  if (selection == null) {\n    return Promise.reject(new Error());\n  }\n  selection.removeAllRanges();\n  const doc = node.ownerDocument;\n  const range = doc.createRange();\n  range.selectNodeContents(node);\n  selection.addRange(range);\n  doc.execCommand(\"copy\");\n  selection.removeAllRanges();\n  return Promise.resolve();\n}\nfunction copyText(doc, text) {\n  const win = doc.defaultView || window;\n  if (win.navigator.clipboard?.writeText !== void 0) {\n    return win.navigator.clipboard.writeText(text);\n  }\n  if (!doc.body) {\n    return Promise.reject(new Error());\n  }\n  const node = createNode(doc, text);\n  doc.body.appendChild(node);\n  copyNode(node);\n  doc.body.removeChild(node);\n  return Promise.resolve();\n}\n\n// src/clipboard.connect.ts\nfunction connect(service, normalize) {\n  const {\n    state,\n    send,\n    context,\n    scope\n  } = service;\n  const copied = state.matches(\"copied\");\n  return {\n    copied,\n    value: context.get(\"value\"),\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    copy() {\n      send({\n        type: \"COPY\"\n      });\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        \"data-copied\": dataAttr(copied),\n        id: getRootId(scope)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        htmlFor: getInputId(scope),\n        \"data-copied\": dataAttr(copied),\n        id: getLabelId(scope)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        \"data-copied\": dataAttr(copied)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        defaultValue: context.get(\"value\"),\n        \"data-copied\": dataAttr(copied),\n        readOnly: true,\n        \"data-readonly\": \"true\",\n        id: getInputId(scope),\n        onFocus(event) {\n          event.currentTarget.select();\n        },\n        onCopy() {\n          send({\n            type: \"INPUT.COPY\"\n          });\n        }\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        type: \"button\",\n        \"aria-label\": copied ? \"Copied to clipboard\" : \"Copy to clipboard\",\n        \"data-copied\": dataAttr(copied),\n        onClick() {\n          send({\n            type: \"COPY\"\n          });\n        }\n      });\n    },\n    getIndicatorProps(props2) {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        hidden: props2.copied !== copied\n      });\n    }\n  };\n}\nvar machine = createMachine({\n  props({\n    props: props2\n  }) {\n    return {\n      timeout: 3e3,\n      defaultValue: \"\",\n      ...props2\n    };\n  },\n  initialState() {\n    return \"idle\";\n  },\n  context({\n    prop,\n    bindable\n  }) {\n    return {\n      value: bindable(() => ({\n        defaultValue: prop(\"defaultValue\"),\n        value: prop(\"value\"),\n        onChange(value) {\n          prop(\"onValueChange\")?.({\n            value\n          });\n        }\n      }))\n    };\n  },\n  watch({\n    track,\n    context,\n    action\n  }) {\n    track([() => context.get(\"value\")], () => {\n      action([\"syncInputElement\"]);\n    });\n  },\n  on: {\n    \"VALUE.SET\": {\n      actions: [\"setValue\"]\n    },\n    COPY: {\n      target: \"copied\",\n      actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n    }\n  },\n  states: {\n    idle: {\n      on: {\n        \"INPUT.COPY\": {\n          target: \"copied\",\n          actions: [\"invokeOnCopy\"]\n        }\n      }\n    },\n    copied: {\n      effects: [\"waitForTimeout\"],\n      on: {\n        \"COPY.DONE\": {\n          target: \"idle\"\n        },\n        COPY: {\n          target: \"copied\",\n          actions: [\"copyToClipboard\", \"invokeOnCopy\"]\n        },\n        \"INPUT.COPY\": {\n          actions: [\"invokeOnCopy\"]\n        }\n      }\n    }\n  },\n  implementations: {\n    effects: {\n      waitForTimeout({\n        prop,\n        send\n      }) {\n        return setRafTimeout(() => {\n          send({\n            type: \"COPY.DONE\"\n          });\n        }, prop(\"timeout\"));\n      }\n    },\n    actions: {\n      setValue({\n        context,\n        event\n      }) {\n        context.set(\"value\", event.value);\n      },\n      copyToClipboard({\n        context,\n        scope\n      }) {\n        writeToClipboard(scope, context.get(\"value\"));\n      },\n      invokeOnCopy({\n        prop\n      }) {\n        prop(\"onStatusChange\")?.({\n          copied: true\n        });\n      },\n      syncInputElement({\n        context,\n        scope\n      }) {\n        const inputEl = getInputEl(scope);\n        if (!inputEl) return;\n        setElementValue(inputEl, context.get(\"value\"));\n      }\n    }\n  }\n});\nvar props = createProps()([\"getRootNode\", \"id\", \"ids\", \"value\", \"defaultValue\", \"timeout\", \"onStatusChange\", \"onValueChange\"]);\nvar contextProps = createSplitProps(props);\nvar indicatorProps = createProps()([\"copied\"]);\nvar splitIndicatorProps = createSplitProps(indicatorProps);\nexport { anatomy, connect, contextProps, indicatorProps, machine, props, splitIndicatorProps };","map":{"version":3,"names":["createAnatomy","setElementValue","getWindow","dataAttr","createMachine","setRafTimeout","createSplitProps","createProps","anatomy","parts","build","getRootId","ctx","ids","root","id","getInputId","input","getLabelId","label","getInputEl","getById","writeToClipboard","value","copyText","getDoc","createNode","doc","text","node","createElement","Object","assign","style","width","height","position","top","textContent","copyNode","win","selection","getSelection","Promise","reject","Error","removeAllRanges","ownerDocument","range","createRange","selectNodeContents","addRange","execCommand","resolve","defaultView","window","navigator","clipboard","writeText","body","appendChild","removeChild","connect","service","normalize","state","send","context","scope","copied","matches","get","setValue","type","copy","getRootProps","element","attrs","getLabelProps","htmlFor","getControlProps","control","getInputProps","defaultValue","readOnly","onFocus","event","currentTarget","select","onCopy","getTriggerProps","button","trigger","onClick","getIndicatorProps","props2","indicator","hidden","machine","props","timeout","initialState","prop","bindable","onChange","watch","track","action","on","actions","COPY","target","states","idle","effects","implementations","waitForTimeout","set","copyToClipboard","invokeOnCopy","syncInputElement","inputEl","contextProps","indicatorProps","splitIndicatorProps"],"sources":["C:/Users/Samsung/Desktop/TEC DESARROLLO DE SOFTWARE/5ยบ CUATRIMESTRE/piel/client/node_modules/@zag-js/clipboard/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\r\nimport { setElementValue, getWindow, dataAttr } from '@zag-js/dom-query';\r\nimport { createMachine } from '@zag-js/core';\r\nimport { setRafTimeout, createSplitProps } from '@zag-js/utils';\r\nimport { createProps } from '@zag-js/types';\r\n\r\n// src/clipboard.anatomy.ts\r\nvar anatomy = createAnatomy(\"clipboard\").parts(\"root\", \"control\", \"trigger\", \"indicator\", \"input\", \"label\");\r\nvar parts = anatomy.build();\r\nvar getRootId = (ctx) => ctx.ids?.root ?? `clip:${ctx.id}`;\r\nvar getInputId = (ctx) => ctx.ids?.input ?? `clip:${ctx.id}:input`;\r\nvar getLabelId = (ctx) => ctx.ids?.label ?? `clip:${ctx.id}:label`;\r\nvar getInputEl = (ctx) => ctx.getById(getInputId(ctx));\r\nvar writeToClipboard = (ctx, value) => copyText(ctx.getDoc(), value);\r\nfunction createNode(doc, text) {\r\n  const node = doc.createElement(\"pre\");\r\n  Object.assign(node.style, {\r\n    width: \"1px\",\r\n    height: \"1px\",\r\n    position: \"fixed\",\r\n    top: \"5px\"\r\n  });\r\n  node.textContent = text;\r\n  return node;\r\n}\r\nfunction copyNode(node) {\r\n  const win = getWindow(node);\r\n  const selection = win.getSelection();\r\n  if (selection == null) {\r\n    return Promise.reject(new Error());\r\n  }\r\n  selection.removeAllRanges();\r\n  const doc = node.ownerDocument;\r\n  const range = doc.createRange();\r\n  range.selectNodeContents(node);\r\n  selection.addRange(range);\r\n  doc.execCommand(\"copy\");\r\n  selection.removeAllRanges();\r\n  return Promise.resolve();\r\n}\r\nfunction copyText(doc, text) {\r\n  const win = doc.defaultView || window;\r\n  if (win.navigator.clipboard?.writeText !== void 0) {\r\n    return win.navigator.clipboard.writeText(text);\r\n  }\r\n  if (!doc.body) {\r\n    return Promise.reject(new Error());\r\n  }\r\n  const node = createNode(doc, text);\r\n  doc.body.appendChild(node);\r\n  copyNode(node);\r\n  doc.body.removeChild(node);\r\n  return Promise.resolve();\r\n}\r\n\r\n// src/clipboard.connect.ts\r\nfunction connect(service, normalize) {\r\n  const { state, send, context, scope } = service;\r\n  const copied = state.matches(\"copied\");\r\n  return {\r\n    copied,\r\n    value: context.get(\"value\"),\r\n    setValue(value) {\r\n      send({ type: \"VALUE.SET\", value });\r\n    },\r\n    copy() {\r\n      send({ type: \"COPY\" });\r\n    },\r\n    getRootProps() {\r\n      return normalize.element({\r\n        ...parts.root.attrs,\r\n        \"data-copied\": dataAttr(copied),\r\n        id: getRootId(scope)\r\n      });\r\n    },\r\n    getLabelProps() {\r\n      return normalize.label({\r\n        ...parts.label.attrs,\r\n        htmlFor: getInputId(scope),\r\n        \"data-copied\": dataAttr(copied),\r\n        id: getLabelId(scope)\r\n      });\r\n    },\r\n    getControlProps() {\r\n      return normalize.element({\r\n        ...parts.control.attrs,\r\n        \"data-copied\": dataAttr(copied)\r\n      });\r\n    },\r\n    getInputProps() {\r\n      return normalize.input({\r\n        ...parts.input.attrs,\r\n        defaultValue: context.get(\"value\"),\r\n        \"data-copied\": dataAttr(copied),\r\n        readOnly: true,\r\n        \"data-readonly\": \"true\",\r\n        id: getInputId(scope),\r\n        onFocus(event) {\r\n          event.currentTarget.select();\r\n        },\r\n        onCopy() {\r\n          send({ type: \"INPUT.COPY\" });\r\n        }\r\n      });\r\n    },\r\n    getTriggerProps() {\r\n      return normalize.button({\r\n        ...parts.trigger.attrs,\r\n        type: \"button\",\r\n        \"aria-label\": copied ? \"Copied to clipboard\" : \"Copy to clipboard\",\r\n        \"data-copied\": dataAttr(copied),\r\n        onClick() {\r\n          send({ type: \"COPY\" });\r\n        }\r\n      });\r\n    },\r\n    getIndicatorProps(props2) {\r\n      return normalize.element({\r\n        ...parts.indicator.attrs,\r\n        hidden: props2.copied !== copied\r\n      });\r\n    }\r\n  };\r\n}\r\nvar machine = createMachine({\r\n  props({ props: props2 }) {\r\n    return {\r\n      timeout: 3e3,\r\n      defaultValue: \"\",\r\n      ...props2\r\n    };\r\n  },\r\n  initialState() {\r\n    return \"idle\";\r\n  },\r\n  context({ prop, bindable }) {\r\n    return {\r\n      value: bindable(() => ({\r\n        defaultValue: prop(\"defaultValue\"),\r\n        value: prop(\"value\"),\r\n        onChange(value) {\r\n          prop(\"onValueChange\")?.({ value });\r\n        }\r\n      }))\r\n    };\r\n  },\r\n  watch({ track, context, action }) {\r\n    track([() => context.get(\"value\")], () => {\r\n      action([\"syncInputElement\"]);\r\n    });\r\n  },\r\n  on: {\r\n    \"VALUE.SET\": {\r\n      actions: [\"setValue\"]\r\n    },\r\n    COPY: {\r\n      target: \"copied\",\r\n      actions: [\"copyToClipboard\", \"invokeOnCopy\"]\r\n    }\r\n  },\r\n  states: {\r\n    idle: {\r\n      on: {\r\n        \"INPUT.COPY\": {\r\n          target: \"copied\",\r\n          actions: [\"invokeOnCopy\"]\r\n        }\r\n      }\r\n    },\r\n    copied: {\r\n      effects: [\"waitForTimeout\"],\r\n      on: {\r\n        \"COPY.DONE\": {\r\n          target: \"idle\"\r\n        },\r\n        COPY: {\r\n          target: \"copied\",\r\n          actions: [\"copyToClipboard\", \"invokeOnCopy\"]\r\n        },\r\n        \"INPUT.COPY\": {\r\n          actions: [\"invokeOnCopy\"]\r\n        }\r\n      }\r\n    }\r\n  },\r\n  implementations: {\r\n    effects: {\r\n      waitForTimeout({ prop, send }) {\r\n        return setRafTimeout(() => {\r\n          send({ type: \"COPY.DONE\" });\r\n        }, prop(\"timeout\"));\r\n      }\r\n    },\r\n    actions: {\r\n      setValue({ context, event }) {\r\n        context.set(\"value\", event.value);\r\n      },\r\n      copyToClipboard({ context, scope }) {\r\n        writeToClipboard(scope, context.get(\"value\"));\r\n      },\r\n      invokeOnCopy({ prop }) {\r\n        prop(\"onStatusChange\")?.({ copied: true });\r\n      },\r\n      syncInputElement({ context, scope }) {\r\n        const inputEl = getInputEl(scope);\r\n        if (!inputEl) return;\r\n        setElementValue(inputEl, context.get(\"value\"));\r\n      }\r\n    }\r\n  }\r\n});\r\nvar props = createProps()([\r\n  \"getRootNode\",\r\n  \"id\",\r\n  \"ids\",\r\n  \"value\",\r\n  \"defaultValue\",\r\n  \"timeout\",\r\n  \"onStatusChange\",\r\n  \"onValueChange\"\r\n]);\r\nvar contextProps = createSplitProps(props);\r\nvar indicatorProps = createProps()([\"copied\"]);\r\nvar splitIndicatorProps = createSplitProps(indicatorProps);\r\n\r\nexport { anatomy, connect, contextProps, indicatorProps, machine, props, splitIndicatorProps };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}