{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { mergeProps } from '@zag-js/react';\nimport { forwardRef } from 'react';\nimport { createSplitProps } from '../../utils/create-split-props.js';\nimport { ark } from '../factory.js';\nimport { useSlider } from './use-slider.js';\nimport { SliderProvider } from './use-slider-context.js';\nconst SliderRoot = forwardRef((props, ref) => {\n  const [useSliderProps, localProps] = createSplitProps()(props, [\"aria-label\", \"aria-labelledby\", \"defaultValue\", \"disabled\", \"form\", \"getAriaValueText\", \"id\", \"ids\", \"invalid\", \"max\", \"min\", \"minStepsBetweenThumbs\", \"name\", \"onFocusChange\", \"onValueChange\", \"onValueChangeEnd\", \"orientation\", \"origin\", \"readOnly\", \"step\", \"thumbAlignment\", \"thumbAlignment\", \"thumbSize\", \"value\"]);\n  const slider = useSlider(useSliderProps);\n  const mergedProps = mergeProps(slider.getRootProps(), localProps);\n  return /* @__PURE__ */jsx(SliderProvider, {\n    value: slider,\n    children: /* @__PURE__ */jsx(ark.div, {\n      ...mergedProps,\n      ref\n    })\n  });\n});\nSliderRoot.displayName = \"SliderRoot\";\nexport { SliderRoot };","map":{"version":3,"names":["jsx","mergeProps","forwardRef","createSplitProps","ark","useSlider","SliderProvider","SliderRoot","props","ref","useSliderProps","localProps","slider","mergedProps","getRootProps","value","children","div","displayName"],"sources":["C:/Users/Samsung/Desktop/TEC DESARROLLO DE SOFTWARE/5ยบ CUATRIMESTRE/piel/client/node_modules/@ark-ui/react/dist/components/slider/slider-root.js"],"sourcesContent":["'use client';\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport { mergeProps } from '@zag-js/react';\r\nimport { forwardRef } from 'react';\r\nimport { createSplitProps } from '../../utils/create-split-props.js';\r\nimport { ark } from '../factory.js';\r\nimport { useSlider } from './use-slider.js';\r\nimport { SliderProvider } from './use-slider-context.js';\r\n\r\nconst SliderRoot = forwardRef((props, ref) => {\r\n  const [useSliderProps, localProps] = createSplitProps()(props, [\r\n    \"aria-label\",\r\n    \"aria-labelledby\",\r\n    \"defaultValue\",\r\n    \"disabled\",\r\n    \"form\",\r\n    \"getAriaValueText\",\r\n    \"id\",\r\n    \"ids\",\r\n    \"invalid\",\r\n    \"max\",\r\n    \"min\",\r\n    \"minStepsBetweenThumbs\",\r\n    \"name\",\r\n    \"onFocusChange\",\r\n    \"onValueChange\",\r\n    \"onValueChangeEnd\",\r\n    \"orientation\",\r\n    \"origin\",\r\n    \"readOnly\",\r\n    \"step\",\r\n    \"thumbAlignment\",\r\n    \"thumbAlignment\",\r\n    \"thumbSize\",\r\n    \"value\"\r\n  ]);\r\n  const slider = useSlider(useSliderProps);\r\n  const mergedProps = mergeProps(slider.getRootProps(), localProps);\r\n  return /* @__PURE__ */ jsx(SliderProvider, { value: slider, children: /* @__PURE__ */ jsx(ark.div, { ...mergedProps, ref }) });\r\n});\r\nSliderRoot.displayName = \"SliderRoot\";\r\n\r\nexport { SliderRoot };\r\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,GAAG,QAAQ,mBAAmB;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,GAAG,QAAQ,eAAe;AACnC,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,cAAc,QAAQ,yBAAyB;AAExD,MAAMC,UAAU,GAAGL,UAAU,CAAC,CAACM,KAAK,EAAEC,GAAG,KAAK;EAC5C,MAAM,CAACC,cAAc,EAAEC,UAAU,CAAC,GAAGR,gBAAgB,CAAC,CAAC,CAACK,KAAK,EAAE,CAC7D,YAAY,EACZ,iBAAiB,EACjB,cAAc,EACd,UAAU,EACV,MAAM,EACN,kBAAkB,EAClB,IAAI,EACJ,KAAK,EACL,SAAS,EACT,KAAK,EACL,KAAK,EACL,uBAAuB,EACvB,MAAM,EACN,eAAe,EACf,eAAe,EACf,kBAAkB,EAClB,aAAa,EACb,QAAQ,EACR,UAAU,EACV,MAAM,EACN,gBAAgB,EAChB,gBAAgB,EAChB,WAAW,EACX,OAAO,CACR,CAAC;EACF,MAAMI,MAAM,GAAGP,SAAS,CAACK,cAAc,CAAC;EACxC,MAAMG,WAAW,GAAGZ,UAAU,CAACW,MAAM,CAACE,YAAY,CAAC,CAAC,EAAEH,UAAU,CAAC;EACjE,OAAO,eAAgBX,GAAG,CAACM,cAAc,EAAE;IAAES,KAAK,EAAEH,MAAM;IAAEI,QAAQ,EAAE,eAAgBhB,GAAG,CAACI,GAAG,CAACa,GAAG,EAAE;MAAE,GAAGJ,WAAW;MAAEJ;IAAI,CAAC;EAAE,CAAC,CAAC;AAChI,CAAC,CAAC;AACFF,UAAU,CAACW,WAAW,GAAG,YAAY;AAErC,SAASX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}